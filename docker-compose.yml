version: "3.9"

services:
  # =========================
  # FRONTEND (Vue 3 + Vite)
  # =========================
  frontend:
    build:
      context: .
      dockerfile: docker/frontend.Dockerfile
    # Монтируем локальный код для hot-reload
    volumes:
      - ./FrontEnd:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment:
      - NODE_ENV=development
    depends_on:
      - backend
    networks:
      - devnet

  # =========================
  # BACKEND (Node.js API)
  # =========================
  backend:
    build:
      context: .
      dockerfile: docker/backend.Dockerfile
    volumes:
      - ./BackEnd:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=development
      - MONGO_URL=mongodb://mongo:27017/mydb
      - S3_ENDPOINT=http://minio:9002
      - S3_ACCESS_KEY=minio
      - S3_SECRET_KEY=miniopass
      - PORT=3000
    depends_on:
      - mongo
      - minio
    networks:
      - devnet

  # =========================
  # DATABASE (MongoDB)
  # =========================
  mongo:
    image: mongo:7
    restart: always
    volumes:
      - mongo_data:/data/db
    ports:
      - "27017:27017"
    networks:
      - devnet

  # =========================
  # MongoDB GUI (Mongo Express)
  # =========================
  mongo-express:
    image: mongo-express:1
    restart: always
    ports:
      - "8081:8081"
    environment:
      - ME_CONFIG_MONGODB_SERVER=mongo
      - ME_CONFIG_MONGODB_PORT=27017
    depends_on:
      - mongo
    networks:
      - devnet

  # =========================
  # MINIO (S3 Storage)
  # =========================
  minio:
    image: minio/minio
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=minio
      - MINIO_ROOT_PASSWORD=miniopass
    volumes:
      - minio_data:/data
    ports:
      - "9002:9002"  # S3 API
      - "9001:9001"  # Web console
    networks:
      - devnet

# =========================
# VOLUMES (персистентные данные)
# =========================
volumes:
  mongo_data:
  minio_data:

# =========================
# NETWORK (общая сеть для сервисов)
# =========================
networks:
  devnet:
    driver: bridge